name: Continuous integration
on: [push, pull_request]
defaults:
  run:
    shell: bash
jobs:
  ci-linux:
    name: Build and test on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - if: ${{ github.event_name == 'push' }}
      uses: azure/docker-login@v1
      with:
        username: stephanmisc
        password: ${{ secrets.DOCKER_PASSWORD }}
    - uses: stepchowfun/toast/.github/actions/toast@main
      with:
        tasks: build test lint release run
        repo: stephanmisc/toast
        write_remote_cache: ${{ github.event_name == 'push' }}
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # The artifact name will contain the target triple, so the file name doesn't need to.
        mv artifacts/stem-cell-x86_64-unknown-linux-gnu artifacts/stem-cell
    - uses: actions/upload-artifact@v2
      with:
        name: x86_64-unknown-linux-gnu
        path: artifacts/stem-cell
        if-no-files-found: error
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # The artifact name will contain the target triple, so the file name doesn't need to.
        mv artifacts/stem-cell-x86_64-unknown-linux-musl artifacts/stem-cell
    - uses: actions/upload-artifact@v2
      with:
        name: x86_64-unknown-linux-musl
        path: artifacts/stem-cell
        if-no-files-found: error
  ci-macos:
    name: Build and test on macOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        rustup toolchain install 1.53.0 # [ref:rust_1_53_0]
        rustup default 1.53.0 # [ref:rust_1_53_0]
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # Build and test.
        cargo build --locked --release --target x86_64-apple-darwin
        NO_COLOR=true cargo test --locked # [ref:colorless_tests]
    - uses: actions/upload-artifact@v2
      with:
        name: x86_64-apple-darwin
        path: target/x86_64-apple-darwin/release/stem-cell
        if-no-files-found: error
  ci-windows:
    name: Build and test on Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        rustup toolchain install 1.53.0 # [ref:rust_1_53_0]
        rustup default 1.53.0 # [ref:rust_1_53_0]
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # Build and test.
        cargo build --locked --release --target x86_64-pc-windows-msvc
        NO_COLOR=true cargo test --locked # [ref:colorless_tests]
    - uses: actions/upload-artifact@v2
      with:
        name: x86_64-pc-windows-msvc
        path: target/x86_64-pc-windows-msvc/release/stem-cell.exe
        if-no-files-found: error
  install-macos:
    name: Run the installer script on macOS to validate it
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # Run the installer script.
        PREFIX=. ./install.sh

        # Run the installed binary.
        ./stem-cell
  install-ubuntu:
    name: Run the installer script on Ubuntu to validate it
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # Run the installer script.
        PREFIX=. ./install.sh

        # Run the installed binary.
        ./stem-cell
  create-release:
    name: Create a release on GitHub if applicable
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [ci-linux, ci-macos, ci-windows, install-macos, install-ubuntu]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        path: artifacts/
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Make Bash not silently ignore errors.
        set -euo pipefail

        # Fetch the program version.
        VERSION="$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"

        # If the release already exists, exit early.
        if hub release show "v$VERSION" &> /dev/null; then
          echo "Release v$VERSION already exists."
          exit
        fi

        # Give the artifacts unique names.
        mv \
          artifacts/x86_64-unknown-linux-gnu/stem-cell \
          artifacts/stem-cell-x86_64-unknown-linux-gnu
        mv \
          artifacts/x86_64-unknown-linux-musl/stem-cell \
          artifacts/stem-cell-x86_64-unknown-linux-musl
        mv \
          artifacts/x86_64-apple-darwin/stem-cell \
          artifacts/stem-cell-x86_64-apple-darwin
        mv \
          artifacts/x86_64-pc-windows-msvc/stem-cell.exe \
          artifacts/stem-cell-x86_64-pc-windows-msvc.exe

        # Create the release.
        hub release create \
          --commitish '${{ github.sha }}' \
          --message "v$VERSION" \
          --attach 'artifacts/stem-cell-x86_64-unknown-linux-gnu' \
          --attach 'artifacts/stem-cell-x86_64-unknown-linux-musl' \
          --attach 'artifacts/stem-cell-x86_64-apple-darwin' \
          --attach 'artifacts/stem-cell-x86_64-pc-windows-msvc.exe' \
          "v$VERSION"
        echo "Created release v$VERSION."
    - uses: stepchowfun/toast/.github/actions/toast@main
      with:
        tasks: publish
        repo: stephanmisc/toast
      env:
        CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
